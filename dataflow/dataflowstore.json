{
	"name": "dataflowstore",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "IntermediateCSV",
						"type": "DatasetReference"
					},
					"name": "CSVSource"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsShop",
						"type": "DatasetReference"
					},
					"name": "dwhdb"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SalesBlob",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "createHash"
				},
				{
					"name": "Exists1"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "SetAttrributes"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "CreateHashNewData"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tStore_Code as integer,\n\t\tStore_Name as string,\n\t\tCOMPANY as string,\n\t\tCompartment as string,\n\t\tSubCompartment as string,\n\t\tTYPE as string,\n\t\tnick_name as string,\n\t\tprod_code as string,\n\t\tNetSold_Qty as short,\n\t\tCost as string,\n\t\tRetail_Price as string,\n\t\tUnit_Price_Sold as string,\n\t\tFinalPrice as boolean,\n\t\tCONCESSION_ID as integer,\n\t\tCONCESSION_Code as string,\n\t\tNew_Price_After_Discount as string,\n\t\tCONCESSION_Description as string,\n\t\tAmount_Discount as string,\n\t\tPercent_Discount as double,\n\t\tNetSold_Amount as string,\n\t\tTAX_RATE as double,\n\t\tTAX_AMOUNT1 as double,\n\t\tTAX_AMOUNT2 as double,\n\t\temp_code as string,\n\t\tEmp_Name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CSVSource\nsource(output(\n\t\tPOS_ID as integer,\n\t\tPOS_CODE as string,\n\t\tPOS_LABEL as string,\n\t\tDISTRICT as string,\n\t\tBLOCK as string,\n\t\tREGION as string,\n\t\tTIER as string,\n\t\t{_inserted_dt} as timestamp,\n\t\t{_updated_dt} as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> dwhdb\ndwhdb derive(dimhash = sha1(POS_CODE+ POS_LABEL)) ~> createHash\nCreateHashNewData, createHash exists(newdatahash == dimhash,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists1\nExists1, dwhdb lookup(toString(Store_Code) == POS_CODE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 derive(POS_LABEL = Store_Name,\n\t\tPOS_CODE = Store_Code,\n\t\t{_inserted_dt} = iif(isNull(POS_ID) ,  currentTimestamp(), {_inserted_dt}),\n\t\t{_updated_dt} = currentTimestamp()) ~> SetAttrributes\nSetAttrributes aggregate(groupBy(POS_CODE,\n\t\tPOS_LABEL,\n\t\tPOS_ID,\n\t\t{_inserted_dt},\n\t\t{_updated_dt}),\n\tcount = count(POS_CODE)) ~> Aggregate1\nCSVSource derive(newdatahash = sha1(toString(Store_Code) + Store_Name)) ~> CreateHashNewData\nAggregate1 alterRow(insertIf(isNull(POS_ID)),\n\tupdateIf(not(isNull(POS_ID)))) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tPOS_CODE,\n\t\tPOS_LABEL,\n\t\t{_inserted_dt},\n\t\t{_updated_dt}\n\t)) ~> sink1"
		}
	}
}